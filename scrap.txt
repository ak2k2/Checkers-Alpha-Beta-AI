
# def cheat_two_move_score(WP, BP, K):
#     return num_pieces_that_can_be_captured_by_white_if_he_gets_two_consecutive_jumps(
#         WP, BP, K
#     ) - num_pieces_that_can_be_captured_by_black_if_he_gets_two_consecutive_jumps(
#         WP, BP, K
#     )


# def num_pieces_that_can_be_captured_by_white_if_he_gets_two_consecutive_jumps(
#     WP, BP, K
# ):
#     captures = 0
#     # Get white's jump sequences (potential captures)
#     white_first_moves = generate_legal_moves(WP, BP, K, PlayerTurn.WHITE)
#     white_capture_moves = all_jump_sequences(
#         WP, BP, K, get_jumpers_white(WP, BP, K), None, PlayerTurn.WHITE
#     )
#     if len(white_first_moves) == 0:
#         return captures
#     # print(f"first moves: {white_capture_moves}")
#     for m in white_capture_moves:
#         captures += len(m) - 1
#     for first_move in white_first_moves:
#         WP, BP, K = do_move(WP, BP, K, first_move, PlayerTurn.WHITE)
#         white_second_capture_moves = all_jump_sequences(
#             WP, BP, K, get_jumpers_white(WP, BP, K), None, PlayerTurn.WHITE
#         )
#         # print(f"second moves: {white_second_capture_moves}")
#         if len(white_second_capture_moves) == 0:
#             return captures
#         for m in white_second_capture_moves:
#             captures += len(m) - 1

#     return captures


# def num_pieces_that_can_be_captured_by_black_if_he_gets_two_consecutive_jumps(
#     WP, BP, K
# ):
#     captures = 0
#     # Get white's jump sequences (potential captures)
#     black_first_moves = generate_legal_moves(WP, BP, K, PlayerTurn.BLACK)

#     if len(black_first_moves) == 0:
#         return captures

#     black_capture_moves = all_jump_sequences(
#         WP, BP, K, None, get_jumpers_black(WP, BP, K), PlayerTurn.BLACK
#     )
#     # print(f"first moves: {black_capture_moves}")
#     for m in black_capture_moves:
#         captures += len(m) - 1
#     for first_move in black_first_moves:
#         WP, BP, K = do_move(WP, BP, K, first_move, PlayerTurn.BLACK)
#         black_second_capture_moves = all_jump_sequences(
#             WP, BP, K, None, get_jumpers_black(WP, BP, K), PlayerTurn.BLACK
#         )
#         # print(f"second moves: {black_second_capture_moves}")
#         for m in black_second_capture_moves:
#             captures += len(m) - 1

#     return captures